Terminales no usados en la gramática

   NODE


Gramática

    0 $accept: translation_unit $end

    1 translation_unit: decl
    2                 | translation_unit decl

    3 decl: var_decl
    4     | runconfig_decl
    5     | node_attr_decl
    6     | ';'

    7 runconfig_decl: SYMBOL '=' expression ';'

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression ';'
    9               | symbol_istate_list '.' SYMBOL '=' istate_expression_list ';'

   10 symbol_istate_list: '[' symbol_list ']'

   11 symbol_list: SYMBOL
   12            | symbol_list ',' SYMBOL

   13 istate_expression_list: istate_expression
   14                       | istate_expression_list ',' istate_expression

   15 istate_expression: primary_expression '[' expression_list ']'

   16 expression_list: primary_expression
   17                | expression_list ',' primary_expression

   18 var_decl: VARIABLE '=' expression ';'

   19 primary_expression: INTEGER
   20                   | DOUBLE
   21                   | VARIABLE
   22                   | '(' expression ')'

   23 postfix_expression: primary_expression

   24 unary_expression: postfix_expression
   25                 | '+' unary_expression
   26                 | '-' unary_expression
   27                 | '!' unary_expression
   28                 | LOGNOT unary_expression

   29 multiplicative_expression: unary_expression
   30                          | multiplicative_expression '*' unary_expression
   31                          | multiplicative_expression '/' unary_expression

   32 additive_expression: multiplicative_expression
   33                    | additive_expression '+' multiplicative_expression
   34                    | additive_expression '-' multiplicative_expression

   35 relational_expression: additive_expression
   36                      | relational_expression '<' additive_expression
   37                      | relational_expression '>' additive_expression
   38                      | relational_expression LTEQ additive_expression
   39                      | relational_expression GTEQ additive_expression

   40 equality_expression: relational_expression
   41                    | equality_expression EQUAL relational_expression
   42                    | equality_expression NOT_EQUAL relational_expression

   43 logical_and_expression: equality_expression
   44                       | logical_and_expression LOGAND equality_expression

   45 logical_or_expression: logical_and_expression
   46                      | logical_or_expression LOGOR logical_and_expression

   47 logical_xor_expression: logical_or_expression
   48                       | logical_xor_expression LOGXOR logical_or_expression
   49                       | logical_xor_expression '^' logical_or_expression

   50 conditional_expression: logical_xor_expression
   51                       | logical_xor_expression '?' expression ':' conditional_expression

   52 expression: conditional_expression


Terminales con las reglas donde aparecen

$end (0) 0
'!' (33) 27
'(' (40) 22
')' (41) 22
'*' (42) 30
'+' (43) 25 33
',' (44) 12 14 17
'-' (45) 26 34
'.' (46) 8 9
'/' (47) 31
':' (58) 51
';' (59) 6 7 8 9 18
'<' (60) 36
'=' (61) 7 8 9 18
'>' (62) 37
'?' (63) 51
'[' (91) 10 15
']' (93) 10 15
'^' (94) 49
error (256)
VARIABLE (258) 18 21
SYMBOL (259) 7 8 9 11 12
DOUBLE (260) 20
INTEGER (261) 19
LOGAND (262) 44
LOGOR (263) 46
LOGXOR (264) 48
LOGNOT (265) 28
EQUAL (266) 41
NOT_EQUAL (267) 42
NODE (268)
GTEQ (269) 39
LTEQ (270) 38


No terminales con las reglas donde aparecen

$accept (34)
    en la izquierda: 0
translation_unit (35)
    en la izquierda: 1 2, en la derecha: 0 2
decl (36)
    en la izquierda: 3 4 5 6, en la derecha: 1 2
runconfig_decl (37)
    en la izquierda: 7, en la derecha: 4
node_attr_decl (38)
    en la izquierda: 8 9, en la derecha: 5
symbol_istate_list (39)
    en la izquierda: 10, en la derecha: 9
symbol_list (40)
    en la izquierda: 11 12, en la derecha: 10 12
istate_expression_list (41)
    en la izquierda: 13 14, en la derecha: 9 14
istate_expression (42)
    en la izquierda: 15, en la derecha: 13 14
expression_list (43)
    en la izquierda: 16 17, en la derecha: 15 17
var_decl (44)
    en la izquierda: 18, en la derecha: 3
primary_expression (45)
    en la izquierda: 19 20 21 22, en la derecha: 15 16 17 23
postfix_expression (46)
    en la izquierda: 23, en la derecha: 24
unary_expression (47)
    en la izquierda: 24 25 26 27 28, en la derecha: 25 26 27 28 29
    30 31
multiplicative_expression (48)
    en la izquierda: 29 30 31, en la derecha: 30 31 32 33 34
additive_expression (49)
    en la izquierda: 32 33 34, en la derecha: 33 34 35 36 37 38 39
relational_expression (50)
    en la izquierda: 35 36 37 38 39, en la derecha: 36 37 38 39 40
    41 42
equality_expression (51)
    en la izquierda: 40 41 42, en la derecha: 41 42 43 44
logical_and_expression (52)
    en la izquierda: 43 44, en la derecha: 44 45 46
logical_or_expression (53)
    en la izquierda: 45 46, en la derecha: 46 47 48 49
logical_xor_expression (54)
    en la izquierda: 47 48 49, en la derecha: 48 49 50 51
conditional_expression (55)
    en la izquierda: 50 51, en la derecha: 51 52
expression (56)
    en la izquierda: 52, en la derecha: 7 8 18 22 51


Estado 0

    0 $accept: . translation_unit $end

    VARIABLE  desplazar e ir al estado 1
    SYMBOL    desplazar e ir al estado 2
    ';'       desplazar e ir al estado 3
    '['       desplazar e ir al estado 4

    translation_unit    ir al estado 5
    decl                ir al estado 6
    runconfig_decl      ir al estado 7
    node_attr_decl      ir al estado 8
    symbol_istate_list  ir al estado 9
    var_decl            ir al estado 10


Estado 1

   18 var_decl: VARIABLE . '=' expression ';'

    '='  desplazar e ir al estado 11


Estado 2

    7 runconfig_decl: SYMBOL . '=' expression ';'
    8 node_attr_decl: SYMBOL . '.' SYMBOL '=' expression ';'

    '='  desplazar e ir al estado 12
    '.'  desplazar e ir al estado 13


Estado 3

    6 decl: ';' .

    $default  reduce usando la regla 6 (decl)


Estado 4

   10 symbol_istate_list: '[' . symbol_list ']'

    SYMBOL  desplazar e ir al estado 14

    symbol_list  ir al estado 15


Estado 5

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . decl

    $end      desplazar e ir al estado 16
    VARIABLE  desplazar e ir al estado 1
    SYMBOL    desplazar e ir al estado 2
    ';'       desplazar e ir al estado 3
    '['       desplazar e ir al estado 4

    decl                ir al estado 17
    runconfig_decl      ir al estado 7
    node_attr_decl      ir al estado 8
    symbol_istate_list  ir al estado 9
    var_decl            ir al estado 10


Estado 6

    1 translation_unit: decl .

    $default  reduce usando la regla 1 (translation_unit)


Estado 7

    4 decl: runconfig_decl .

    $default  reduce usando la regla 4 (decl)


Estado 8

    5 decl: node_attr_decl .

    $default  reduce usando la regla 5 (decl)


Estado 9

    9 node_attr_decl: symbol_istate_list . '.' SYMBOL '=' istate_expression_list ';'

    '.'  desplazar e ir al estado 18


Estado 10

    3 decl: var_decl .

    $default  reduce usando la regla 3 (decl)


Estado 11

   18 var_decl: VARIABLE '=' . expression ';'

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 34
    logical_or_expression      ir al estado 35
    logical_xor_expression     ir al estado 36
    conditional_expression     ir al estado 37
    expression                 ir al estado 38


Estado 12

    7 runconfig_decl: SYMBOL '=' . expression ';'

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 34
    logical_or_expression      ir al estado 35
    logical_xor_expression     ir al estado 36
    conditional_expression     ir al estado 37
    expression                 ir al estado 39


Estado 13

    8 node_attr_decl: SYMBOL '.' . SYMBOL '=' expression ';'

    SYMBOL  desplazar e ir al estado 40


Estado 14

   11 symbol_list: SYMBOL .

    $default  reduce usando la regla 11 (symbol_list)


Estado 15

   10 symbol_istate_list: '[' symbol_list . ']'
   12 symbol_list: symbol_list . ',' SYMBOL

    ']'  desplazar e ir al estado 41
    ','  desplazar e ir al estado 42


Estado 16

    0 $accept: translation_unit $end .

    $default  aceptar


Estado 17

    2 translation_unit: translation_unit decl .

    $default  reduce usando la regla 2 (translation_unit)


Estado 18

    9 node_attr_decl: symbol_istate_list '.' . SYMBOL '=' istate_expression_list ';'

    SYMBOL  desplazar e ir al estado 43


Estado 19

   21 primary_expression: VARIABLE .

    $default  reduce usando la regla 21 (primary_expression)


Estado 20

   20 primary_expression: DOUBLE .

    $default  reduce usando la regla 20 (primary_expression)


Estado 21

   19 primary_expression: INTEGER .

    $default  reduce usando la regla 19 (primary_expression)


Estado 22

   28 unary_expression: LOGNOT . unary_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression  ir al estado 27
    postfix_expression  ir al estado 28
    unary_expression    ir al estado 44


Estado 23

   22 primary_expression: '(' . expression ')'

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 34
    logical_or_expression      ir al estado 35
    logical_xor_expression     ir al estado 36
    conditional_expression     ir al estado 37
    expression                 ir al estado 45


Estado 24

   25 unary_expression: '+' . unary_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression  ir al estado 27
    postfix_expression  ir al estado 28
    unary_expression    ir al estado 46


Estado 25

   26 unary_expression: '-' . unary_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression  ir al estado 27
    postfix_expression  ir al estado 28
    unary_expression    ir al estado 47


Estado 26

   27 unary_expression: '!' . unary_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression  ir al estado 27
    postfix_expression  ir al estado 28
    unary_expression    ir al estado 48


Estado 27

   23 postfix_expression: primary_expression .

    $default  reduce usando la regla 23 (postfix_expression)


Estado 28

   24 unary_expression: postfix_expression .

    $default  reduce usando la regla 24 (unary_expression)


Estado 29

   29 multiplicative_expression: unary_expression .

    $default  reduce usando la regla 29 (multiplicative_expression)


Estado 30

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   32 additive_expression: multiplicative_expression .

    '*'  desplazar e ir al estado 49
    '/'  desplazar e ir al estado 50

    $default  reduce usando la regla 32 (additive_expression)


Estado 31

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   35 relational_expression: additive_expression .

    '+'  desplazar e ir al estado 51
    '-'  desplazar e ir al estado 52

    $default  reduce usando la regla 35 (relational_expression)


Estado 32

   36 relational_expression: relational_expression . '<' additive_expression
   37                      | relational_expression . '>' additive_expression
   38                      | relational_expression . LTEQ additive_expression
   39                      | relational_expression . GTEQ additive_expression
   40 equality_expression: relational_expression .

    GTEQ  desplazar e ir al estado 53
    LTEQ  desplazar e ir al estado 54
    '<'   desplazar e ir al estado 55
    '>'   desplazar e ir al estado 56

    $default  reduce usando la regla 40 (equality_expression)


Estado 33

   41 equality_expression: equality_expression . EQUAL relational_expression
   42                    | equality_expression . NOT_EQUAL relational_expression
   43 logical_and_expression: equality_expression .

    EQUAL      desplazar e ir al estado 57
    NOT_EQUAL  desplazar e ir al estado 58

    $default  reduce usando la regla 43 (logical_and_expression)


Estado 34

   44 logical_and_expression: logical_and_expression . LOGAND equality_expression
   45 logical_or_expression: logical_and_expression .

    LOGAND  desplazar e ir al estado 59

    $default  reduce usando la regla 45 (logical_or_expression)


Estado 35

   46 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   47 logical_xor_expression: logical_or_expression .

    LOGOR  desplazar e ir al estado 60

    $default  reduce usando la regla 47 (logical_xor_expression)


Estado 36

   48 logical_xor_expression: logical_xor_expression . LOGXOR logical_or_expression
   49                       | logical_xor_expression . '^' logical_or_expression
   50 conditional_expression: logical_xor_expression .
   51                       | logical_xor_expression . '?' expression ':' conditional_expression

    LOGXOR  desplazar e ir al estado 61
    '^'     desplazar e ir al estado 62
    '?'     desplazar e ir al estado 63

    $default  reduce usando la regla 50 (conditional_expression)


Estado 37

   52 expression: conditional_expression .

    $default  reduce usando la regla 52 (expression)


Estado 38

   18 var_decl: VARIABLE '=' expression . ';'

    ';'  desplazar e ir al estado 64


Estado 39

    7 runconfig_decl: SYMBOL '=' expression . ';'

    ';'  desplazar e ir al estado 65


Estado 40

    8 node_attr_decl: SYMBOL '.' SYMBOL . '=' expression ';'

    '='  desplazar e ir al estado 66


Estado 41

   10 symbol_istate_list: '[' symbol_list ']' .

    $default  reduce usando la regla 10 (symbol_istate_list)


Estado 42

   12 symbol_list: symbol_list ',' . SYMBOL

    SYMBOL  desplazar e ir al estado 67


Estado 43

    9 node_attr_decl: symbol_istate_list '.' SYMBOL . '=' istate_expression_list ';'

    '='  desplazar e ir al estado 68


Estado 44

   28 unary_expression: LOGNOT unary_expression .

    $default  reduce usando la regla 28 (unary_expression)


Estado 45

   22 primary_expression: '(' expression . ')'

    ')'  desplazar e ir al estado 69


Estado 46

   25 unary_expression: '+' unary_expression .

    $default  reduce usando la regla 25 (unary_expression)


Estado 47

   26 unary_expression: '-' unary_expression .

    $default  reduce usando la regla 26 (unary_expression)


Estado 48

   27 unary_expression: '!' unary_expression .

    $default  reduce usando la regla 27 (unary_expression)


Estado 49

   30 multiplicative_expression: multiplicative_expression '*' . unary_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression  ir al estado 27
    postfix_expression  ir al estado 28
    unary_expression    ir al estado 70


Estado 50

   31 multiplicative_expression: multiplicative_expression '/' . unary_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression  ir al estado 27
    postfix_expression  ir al estado 28
    unary_expression    ir al estado 71


Estado 51

   33 additive_expression: additive_expression '+' . multiplicative_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 72


Estado 52

   34 additive_expression: additive_expression '-' . multiplicative_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 73


Estado 53

   39 relational_expression: relational_expression GTEQ . additive_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 74


Estado 54

   38 relational_expression: relational_expression LTEQ . additive_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 75


Estado 55

   36 relational_expression: relational_expression '<' . additive_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 76


Estado 56

   37 relational_expression: relational_expression '>' . additive_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 77


Estado 57

   41 equality_expression: equality_expression EQUAL . relational_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 78


Estado 58

   42 equality_expression: equality_expression NOT_EQUAL . relational_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 79


Estado 59

   44 logical_and_expression: logical_and_expression LOGAND . equality_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 80


Estado 60

   46 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 81


Estado 61

   48 logical_xor_expression: logical_xor_expression LOGXOR . logical_or_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 34
    logical_or_expression      ir al estado 82


Estado 62

   49 logical_xor_expression: logical_xor_expression '^' . logical_or_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 34
    logical_or_expression      ir al estado 83


Estado 63

   51 conditional_expression: logical_xor_expression '?' . expression ':' conditional_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 34
    logical_or_expression      ir al estado 35
    logical_xor_expression     ir al estado 36
    conditional_expression     ir al estado 37
    expression                 ir al estado 84


Estado 64

   18 var_decl: VARIABLE '=' expression ';' .

    $default  reduce usando la regla 18 (var_decl)


Estado 65

    7 runconfig_decl: SYMBOL '=' expression ';' .

    $default  reduce usando la regla 7 (runconfig_decl)


Estado 66

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' . expression ';'

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 34
    logical_or_expression      ir al estado 35
    logical_xor_expression     ir al estado 36
    conditional_expression     ir al estado 37
    expression                 ir al estado 85


Estado 67

   12 symbol_list: symbol_list ',' SYMBOL .

    $default  reduce usando la regla 12 (symbol_list)


Estado 68

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' . istate_expression_list ';'

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    '('       desplazar e ir al estado 23

    istate_expression_list  ir al estado 86
    istate_expression       ir al estado 87
    primary_expression      ir al estado 88


Estado 69

   22 primary_expression: '(' expression ')' .

    $default  reduce usando la regla 22 (primary_expression)


Estado 70

   30 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce usando la regla 30 (multiplicative_expression)


Estado 71

   31 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce usando la regla 31 (multiplicative_expression)


Estado 72

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   33 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  desplazar e ir al estado 49
    '/'  desplazar e ir al estado 50

    $default  reduce usando la regla 33 (additive_expression)


Estado 73

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   34 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  desplazar e ir al estado 49
    '/'  desplazar e ir al estado 50

    $default  reduce usando la regla 34 (additive_expression)


Estado 74

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   39 relational_expression: relational_expression GTEQ additive_expression .

    '+'  desplazar e ir al estado 51
    '-'  desplazar e ir al estado 52

    $default  reduce usando la regla 39 (relational_expression)


Estado 75

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   38 relational_expression: relational_expression LTEQ additive_expression .

    '+'  desplazar e ir al estado 51
    '-'  desplazar e ir al estado 52

    $default  reduce usando la regla 38 (relational_expression)


Estado 76

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   36 relational_expression: relational_expression '<' additive_expression .

    '+'  desplazar e ir al estado 51
    '-'  desplazar e ir al estado 52

    $default  reduce usando la regla 36 (relational_expression)


Estado 77

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   37 relational_expression: relational_expression '>' additive_expression .

    '+'  desplazar e ir al estado 51
    '-'  desplazar e ir al estado 52

    $default  reduce usando la regla 37 (relational_expression)


Estado 78

   36 relational_expression: relational_expression . '<' additive_expression
   37                      | relational_expression . '>' additive_expression
   38                      | relational_expression . LTEQ additive_expression
   39                      | relational_expression . GTEQ additive_expression
   41 equality_expression: equality_expression EQUAL relational_expression .

    GTEQ  desplazar e ir al estado 53
    LTEQ  desplazar e ir al estado 54
    '<'   desplazar e ir al estado 55
    '>'   desplazar e ir al estado 56

    $default  reduce usando la regla 41 (equality_expression)


Estado 79

   36 relational_expression: relational_expression . '<' additive_expression
   37                      | relational_expression . '>' additive_expression
   38                      | relational_expression . LTEQ additive_expression
   39                      | relational_expression . GTEQ additive_expression
   42 equality_expression: equality_expression NOT_EQUAL relational_expression .

    GTEQ  desplazar e ir al estado 53
    LTEQ  desplazar e ir al estado 54
    '<'   desplazar e ir al estado 55
    '>'   desplazar e ir al estado 56

    $default  reduce usando la regla 42 (equality_expression)


Estado 80

   41 equality_expression: equality_expression . EQUAL relational_expression
   42                    | equality_expression . NOT_EQUAL relational_expression
   44 logical_and_expression: logical_and_expression LOGAND equality_expression .

    EQUAL      desplazar e ir al estado 57
    NOT_EQUAL  desplazar e ir al estado 58

    $default  reduce usando la regla 44 (logical_and_expression)


Estado 81

   44 logical_and_expression: logical_and_expression . LOGAND equality_expression
   46 logical_or_expression: logical_or_expression LOGOR logical_and_expression .

    LOGAND  desplazar e ir al estado 59

    $default  reduce usando la regla 46 (logical_or_expression)


Estado 82

   46 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   48 logical_xor_expression: logical_xor_expression LOGXOR logical_or_expression .

    LOGOR  desplazar e ir al estado 60

    $default  reduce usando la regla 48 (logical_xor_expression)


Estado 83

   46 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   49 logical_xor_expression: logical_xor_expression '^' logical_or_expression .

    LOGOR  desplazar e ir al estado 60

    $default  reduce usando la regla 49 (logical_xor_expression)


Estado 84

   51 conditional_expression: logical_xor_expression '?' expression . ':' conditional_expression

    ':'  desplazar e ir al estado 89


Estado 85

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression . ';'

    ';'  desplazar e ir al estado 90


Estado 86

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' istate_expression_list . ';'
   14 istate_expression_list: istate_expression_list . ',' istate_expression

    ';'  desplazar e ir al estado 91
    ','  desplazar e ir al estado 92


Estado 87

   13 istate_expression_list: istate_expression .

    $default  reduce usando la regla 13 (istate_expression_list)


Estado 88

   15 istate_expression: primary_expression . '[' expression_list ']'

    '['  desplazar e ir al estado 93


Estado 89

   51 conditional_expression: logical_xor_expression '?' expression ':' . conditional_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    LOGNOT    desplazar e ir al estado 22
    '('       desplazar e ir al estado 23
    '+'       desplazar e ir al estado 24
    '-'       desplazar e ir al estado 25
    '!'       desplazar e ir al estado 26

    primary_expression         ir al estado 27
    postfix_expression         ir al estado 28
    unary_expression           ir al estado 29
    multiplicative_expression  ir al estado 30
    additive_expression        ir al estado 31
    relational_expression      ir al estado 32
    equality_expression        ir al estado 33
    logical_and_expression     ir al estado 34
    logical_or_expression      ir al estado 35
    logical_xor_expression     ir al estado 36
    conditional_expression     ir al estado 94


Estado 90

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression ';' .

    $default  reduce usando la regla 8 (node_attr_decl)


Estado 91

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' istate_expression_list ';' .

    $default  reduce usando la regla 9 (node_attr_decl)


Estado 92

   14 istate_expression_list: istate_expression_list ',' . istate_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    '('       desplazar e ir al estado 23

    istate_expression   ir al estado 95
    primary_expression  ir al estado 88


Estado 93

   15 istate_expression: primary_expression '[' . expression_list ']'

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    '('       desplazar e ir al estado 23

    expression_list     ir al estado 96
    primary_expression  ir al estado 97


Estado 94

   51 conditional_expression: logical_xor_expression '?' expression ':' conditional_expression .

    $default  reduce usando la regla 51 (conditional_expression)


Estado 95

   14 istate_expression_list: istate_expression_list ',' istate_expression .

    $default  reduce usando la regla 14 (istate_expression_list)


Estado 96

   15 istate_expression: primary_expression '[' expression_list . ']'
   17 expression_list: expression_list . ',' primary_expression

    ']'  desplazar e ir al estado 98
    ','  desplazar e ir al estado 99


Estado 97

   16 expression_list: primary_expression .

    $default  reduce usando la regla 16 (expression_list)


Estado 98

   15 istate_expression: primary_expression '[' expression_list ']' .

    $default  reduce usando la regla 15 (istate_expression)


Estado 99

   17 expression_list: expression_list ',' . primary_expression

    VARIABLE  desplazar e ir al estado 19
    DOUBLE    desplazar e ir al estado 20
    INTEGER   desplazar e ir al estado 21
    '('       desplazar e ir al estado 23

    primary_expression  ir al estado 100


Estado 100

   17 expression_list: expression_list ',' primary_expression .

    $default  reduce usando la regla 17 (expression_list)
